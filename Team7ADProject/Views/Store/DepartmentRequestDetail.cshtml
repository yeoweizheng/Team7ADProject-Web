@using Team7ADProject.Models;
@{

    DepartmentRequest departmentRequest = (DepartmentRequest)ViewData["departmentRequest"];
    List<StationeryQuantity> stationeryQuantities = (List<StationeryQuantity>)ViewData["stationeryQuantities"];
}
<h4>
    Department Request Detail
    @if(departmentRequest.Status == "Added to Disbursement")
    {
        <button class="btn btn-default" onclick="updateDisbursement()">Update</button>
    }
</h4>
<table class="table table-hover">
    <tr>
        <th>Request Id</th>
        <td>@departmentRequest.DepartmentRequestId</td>
    </tr>
    <tr>
        <th>Request Department</th>
        <td>@departmentRequest.Department.Name</td>
    </tr>
    <tr>
        <th>Request Date</th>
        <td>@departmentRequest.Date</td>
    </tr>
    <tr>
        <th>Remarks</th>
        <td>@departmentRequest.Remarks</td>
    </tr>
    <tr>
        <th>Status</th>
        <td>@departmentRequest.Status</td>
    </tr>
</table>

<table class="table table-hover">
    <thead>
        <tr>
            <th>Item Number</th>
            <th>Category</th>
            <th>Description</th>
            <th>Unit of Measure</th>
            <th>Quantity Requested</th>
            <th>Quantity Retrieved</th>
            <th>Quantity Disbursed</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var stationeryQuantity in stationeryQuantities)
        {
            <tr>
                <td>@stationeryQuantity.Stationery.ItemNumber</td>
                <td>@stationeryQuantity.Stationery.Category.Name</td>
                <td>@stationeryQuantity.Stationery.Description</td>
                <td>@stationeryQuantity.Stationery.UnitOfMeasure.Name</td>
                <td>@stationeryQuantity.QuantityRequested</td>
                <td id="qtyretr_@stationeryQuantity.Stationery.StationeryId">@stationeryQuantity.QuantityRetrieved</td>
                @if(departmentRequest.Status == "Added to Disbursement")
                {
                    <td><input type="number" class="form-control" style="width: 6em;"
                        id="qty_@stationeryQuantity.Stationery.StationeryId"
                        value="@stationeryQuantity.QuantityRetrieved"/></td>
                } else
                {
                    <td>@stationeryQuantity.QuantityDisbursed</td>
                }
            </tr>
        }
    </tbody>
</table>
<script>
    var stationeryIds = [];
    @foreach(var stationeryQuantity in stationeryQuantities)
    {
        <text>
            stationeryIds.push(@stationeryQuantity.Stationery.StationeryId);
        </text>
    }
    function updateDisbursement() {
        var stationeryQuantities = [];
        var qtyExceeded = false;
        stationeryIds.forEach(function (id) {
            if ($("#qty_" + id).val() == "" || $("#qty_" + id).val() == 0) return;
            if (parseInt($("#qty_" + id).val()) > parseInt($("#qtyretr_" + id).html())) {
                console.log($("#qty_" + id).val());
                console.log($("#qtyretr_" + id).html());
                qtyExceeded = true;
            }
            stationeryQuantities.push({
                "stationeryId": id,
                "quantityDisbursed": $("#qty_" + id).val()
            });
        });
        if (qtyExceeded) {
            alert("Quantity disbursed cannot be more than quantity retrieved");
            return;
        }
        $.ajax({
            url: "/Store/UpdateDisbursement/@departmentRequest.DepartmentRequestId",
            method: "POST",
            data: { stationeryQuantitiesJSON: JSON.stringify(stationeryQuantities) },
            success: function () {
                window.location.href = "/Store/DepartmentRequestDetail/@departmentRequest.DepartmentRequestId"
            }
        });
    }
</script>

