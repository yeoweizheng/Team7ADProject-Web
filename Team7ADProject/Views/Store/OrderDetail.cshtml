@using Team7ADProject.Models;
@{
    Order order = (Order)ViewData["order"];
    List<StationeryQuantity> stationeryQuantities = (List<StationeryQuantity>)order.StationeryQuantities;
}
<h4>
    Order Detail
    @if(order.Status == "Created")
    {
        <button class="btn btn-default" onclick="placeOrder()">Place Order</button>
    }
    @if(order.Status == "Ordered" || order.Status == "Partially Received")
    {
        <button class="btn btn-default" onclick="updateOrder()">Update</button>
    }
</h4>
<table class="table table-hover">
    <tr>
        <th>Order Id</th>
        <td>@order.OrderId</td>
    </tr>
    <tr>
        <th>Status</th>
        <td>@order.Status</td>
    </tr>
</table>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Item Number</th>
            <th>Description</th>
            <th>Quantity Ordered</th>
            <th>Quantity Received</th>
            <th>Unit Price</th>
            <th>Subtotal</th>
        </tr>
    </thead>
    <tbody>
    <tbody>
        @foreach (var stationeryQuantity in order.StationeryQuantities)
        {
            <tr>
                <td>@stationeryQuantity.Stationery.ItemNumber</td>
                <td>@stationeryQuantity.Stationery.Description</td>
                <td id="qtyorder_@stationeryQuantity.StationeryQuantityId">@stationeryQuantity.QuantityOrdered</td>
                <td>
                    @if (order.Status == "Ordered" || order.Status == "Partially Received")
                    {
                        if (stationeryQuantity.QuantityReceived != 0)
                        {
                            <input type="number" class="form-control" style="width: 6em" id="qtyrecv_@stationeryQuantity.StationeryQuantityId" value="@stationeryQuantity.QuantityReceived"/>
                        }
                        else
                        {
                            <input type="number" class="form-control" style="width: 6em" id="qtyrecv_@stationeryQuantity.StationeryQuantityId" value="@stationeryQuantity.QuantityOrdered"/>
                        }
                    } else
                    {
                        @stationeryQuantity.QuantityReceived
                    }
                </td>
                <td>$@stationeryQuantity.Price.ToString("N2")</td>
                <td>$@stationeryQuantity.Subtotal.ToString("N2")</td>
            </tr>
        }
    </tbody>
</table>
@if (order.Status != "Received")
{
    <script>
        var stationeryQuantityIds = [];
        @foreach (var stationeryQuantity in order.StationeryQuantities)
        {
            <text> stationeryQuantityIds.push(@stationeryQuantity.StationeryQuantityId) </text>
        }
        function placeOrder() {
            $.ajax({
                url: "/Store/PlaceOrder/@order.OrderId",
                method: "POST",
                success: function () {
                    window.location.href = "/Store/OrderDetail/@order.OrderId"
                }
            });
        }
        function updateOrder() {
            var quantitiesReceived = [];
            stationeryQuantityIds.forEach(function (id) {
                var qtyOrdered = parseInt($("#qtyorder_" + id).html());
                var qtyRecv = parseInt($("#qtyrecv_" + id).val());
                if (qtyRecv > qtyOrdered){
                    alert("Quantity received cannot be more than quantity ordered");
                    return;
                }
                quantitiesReceived.push(qtyRecv);
            });
            $.ajax({
                url: "/Store/UpdateOrder/@order.OrderId",
                method: "POST",
                data: {
                    "quantitiesReceivedJSON": JSON.stringify(quantitiesReceived)
                },
                success: function () {
                    window.location.href = "/Store/OrderDetail/@order.OrderId";
                }
            });
        }
    </script>
}
