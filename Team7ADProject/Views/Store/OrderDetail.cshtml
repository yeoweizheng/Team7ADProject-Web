@using Team7ADProject.Models;
@{
    Order order = (Order)ViewData["order"];
    List<StationeryQuantity> stationeryQuantities = (List<StationeryQuantity>)order.StationeryQuantities;
}
<h4>
    Order Detail
    <button class="btn btn-default" onclick="updateOrder()">Update</button>
</h4>
<table class="table table-hover">
    <tr>
        <th>Order Id</th>
        <td>@order.OrderId</td>
    </tr>
    <tr>
        <th>Status</th>
        <td>@order.Status</td>
    </tr>
</table>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Item Number</th>
            <th>Description</th>
            <th>Quantity Ordered</th>
            <th>Quantity Received</th>
            <th>Unit Price</th>
            <th>Subtotal</th>
        </tr>
    </thead>
    <tbody>
    <tbody>
        @foreach (var stationeryQuantity in order.StationeryQuantities)
        {
            <tr>
                <td>@stationeryQuantity.Stationery.ItemNumber</td>
                <td>@stationeryQuantity.Stationery.Description</td>
                <td id="qtyorder_@stationeryQuantity.StationeryQuantityId">@stationeryQuantity.QuantityOrdered</td>
                <td>
                    @if(stationeryQuantity.QuantityReceived != 0)
                    {
                        <input type="number" class="form-control" style="width: 6em" id="qtyrecv_@stationeryQuantity.StationeryQuantityId" value="@stationeryQuantity.QuantityReceived"/>
                    } else
                    {
                        <input type="number" class="form-control" style="width: 6em" id="qtyrecv_@stationeryQuantity.StationeryQuantityId" value="@stationeryQuantity.QuantityOrdered"/>
                    }
                </td>
                <td>$@stationeryQuantity.Price</td>
                <td>$@stationeryQuantity.Subtotal</td>
            </tr>
        }
    </tbody>
</table>
<script>
    var stationeryQuantityIds = [];
    @foreach(var stationeryQuantity in order.StationeryQuantities)
    {
        <text> stationeryQuantityIds.push(@stationeryQuantity.StationeryQuantityId) </text>
    }
    function updateOrder() {
        var quantityReceived = [];
        stationeryQuantityIds.forEach(function (id) {
            var qtyOrdered = parseInt($("#qtyorder_" + id).html());
            var qtyRecv = parseInt($("#qtyrecv_" + id).val());
            if (qtyRecv > qtyOrdered){
                alert("Quantity received cannot be more than quantity ordered");
                return;
            }
            quantityReceived.push(qtyRecv);
        });
        $.ajax({
            url: "/Store/UpdateOrder/@order.OrderId",
            method: "POST",
            data: {
                "quantityReceivedJSON": JSON.stringify(quantityReceived)
            },
            success: function () {
                window.location.href = "/Store/Orders";
            }
        });
    }
</script>
